<!-- secret.ejs -->

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />

    <title>Savings</title>
    <link rel="stylesheet" href="style2.css" />
    <script src="script2.js"></script>
    <link
      href="https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/secret.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- for calender in s2 -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>
  <body>
    <div class="sidebar close">
      <div class="logo-details">
        <i class="bx bxs-wallet"></i>
        <span class="logo_name">Expensify</span>
      </div>
      <ul class="nav-links">
        <li>
          <a href="#s1"
            ><i class="bx bx-grid-alt"></i
            ><span class="link_name">Dashboard</span></a
          >
          <ul class="sub-menu blank">
            <li><a class="link_name" href="#s1">Dashboard</a></li>
          </ul>
        </li>
        <li>
          <a href="#s2"
            ><i class="bx bxs-bank"></i
            ><span class="link_name">Savings</span></a
          >
          <ul class="sub-menu blank">
            <li><a class="link_name" href="#s2">Savings</a></li>
          </ul>
        </li>
        <li></li>
        <li>
          <a href="#s6"
            ><i class="bx bx-run"></i
            ><span class="link_name">View Goal</span></a
          >
          <ul class="sub-menu blank">
            <li><a class="link_name" href="#s6">View Goal</a></li>
          </ul>
        </li>
        <li>
          <a href="#s3"
            ><i class="bx bx-history"></i
            ><span class="link_name">View Transactions</span></a
          >
          <ul class="sub-menu blank">
            <li><a class="link_name" href="#s3">View Transactions</a></li>
          </ul>
        </li>

        <li>
          <a href="#s4"
            ><i class="bx bx-info-circle"></i
            ><span class="link_name">About us </span></a
          >
          <ul class="sub-menu blank">
            <li><a class="link_name" href="#s4">About us </a></li>
          </ul>
        </li>
        <li>
          <div class="profile-details">
            <div class="profile-content">
              <img
                src="https://tse1.mm.bing.net/th?id=OIP.X-APKy_ojyhaVCO1BiD8hwHaKB&pid=Api&rs=1&c=1&qlt=95&w=91&h=124"
                alt="profileImg"
              />
            </div>
            <div class="name-job">
              <div class="profile_name"><%= username %>!</div>
              <div class="job">User</div>
            </div>
            <i class="bx bx-log-out" id="logoutIcon"></i>
            <ul class="sub-menu blank">
              <li><a class="link_name" id="logoutLink">Logout</a></li>
          </ul>
          </div>
        
        </li>
        
      </ul>
    </div>

    <section class="home-section" id="s1">
      <div class="home-content" style="position: fixed">
        <i class="bx bx-menu"></i>
        <span class="text">Welcome back, <%= username %>!</span>
      </div>
      <div class="p">
        <br /><br /><br />
        <p>This is you Dashboard and it gives you overview of everything...</p>
      </div>
      <div class="boxes-container">
        <div class="box1">
          <h2>Budget Status</h2>
          <hr />
          <p class="center-text1">Looking good, <%= username %>!</p>
          <p class="center-text2">
            You have spent 0% of your expected monthly budget. You still have
            100% to go.
          </p>
        </div>
        <div class="show">
          <div class="gb1">
            <p>$<span id="totalSalary"><%= totalSalary %></span></p>
            <h2>Total Salary</h2>
          </div>
          <div class="gb2">
            <p>$<span id="totalExpenses"><%= totalExpenses %></span></p>
            <h2>Total Expenses</h2>
          </div>
          <div class="gb3">
            <p>$<span id="totalInvestments"><%= totalInvestments %></span></p>
            <h2>Total Investments</h2>
          </div>
        </div>

        <div class="canvas-container">
          <canvas id="donutChart" width="100%" height="100px"></canvas>
        </div>
      </div>

      <button
        class="ml-10 mt-10 bg-gray-100 hover:bg-purple-200 text-purple-800 font-bold py-3 px-7 border-b-4 border-purple-400 hover:border-purple-700 rounded-full"
        id="addIcon"
      >
        <div class="flex items-center">
          <span>Add Transactions</span>
        </div>
      </button>

      <div class="overlay" onclick="closePopup()"></div>
      <form
        action="/transaction"
        method="POST"
        name="trsform"
        onsubmit="return saveTransaction()"
      >
        <div id="popup" class="transaction-popup">
          <h2 class="mb-2">Amount:</h2>
          <input
            type="number"
            id="amount"
            placeholder="Enter amount"
            name="amount"
            class="w-full mb-4 px-3 py-2 border rounded-md"
          />

          <h2 class="mb-2">Date:</h2>
          <input
            type="date"
            id="date"
            name="date"
            class="w-full mb-4 px-3 py-2 border rounded-md"
          />

          <h2 class="mb-2">Credit/Debit:</h2>
          <select
            id="creditDebit"
            name="creditDebit"
            class="w-full mb-4 px-3 py-2 border rounded-md"
            onchange="toggleTypeOptions()"
          >
            <option value="credit">Credit</option>
            <option value="debit">Debit</option>
          </select>

          <h2 class="mb-2">Type:</h2>
          <select
            id="type"
            class="w-full mb-4 px-3 py-2 border rounded-md"
            name="type"
          >
            <option value="">Select type</option>
          </select>

          <h2 class="mb-2">Description:</h2>
          <input
            type="text"
            id="description"
            name="description"
            placeholder="Enter description"
            class="w-full mb-4 px-3 py-2 border rounded-md"
          />

          <div class="flex justify-end">
            <button
              class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 mr-2"
              type="submit"
            >
              Save
            </button>
            <button
              onclick="closePopup()"
              class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600"
            >
              Close
            </button>
          </div>
        </div>
      </form>
    </section>
    <section id="s2" class="savings-section" style="padding-top: 80px">
      <div class="goal">
        <h2 class="text-xl font-bold mb-4">Set a Savings Goal</h2>
        <p class="mb-4">Getting a little closer to your goal every day.</p>
        <form
          action="/goal"
          method="POST"
          name="goal"
          id="goal"
          onsubmit="return saveGoal()"
          
        >
        <div class="containergoal">
          <div class="goalbox1">
            <div class="mb-4">
              <label for="goalName" class="block mb-1"><h1
                class="mb-4 text-2xl font-extrabold leading-none tracking-tight  md:text-3xl lg:text-4xl dark:text-white"
              >Goal Name</h1></label>
              <br>
              <input
                type="text"
                id="goalName"
                name="goalName"
                pattern="[A-Za-z]+"
                placeholder="Enter goal name"
                class="w-64 px-3 py-2 border rounded-md"
              />
            </div>
           </div>
  
            <div class="goalbox2">
              <div class="mb-4">
                <label for="goalAmount" class="block mb-1"><h1
                  class="mb-4 text-2xl font-extrabold leading-none tracking-tight  md:text-3xl lg:text-4xl dark:text-white"
                >Amount</h1></label>
                <br>
                <input
                  type="number"
                  id="goalAmount"
                  name="goalAmount"
                  placeholder="Enter amount"
                  min="0"
                  class="w-64 px-3 py-2 border rounded-md"
                />
              </div>
            </div>
           <div class="goalbox3">
            <div class="mb-4">
              <label for="chooseDate"><h1
                class="mb-4 text-2xl font-extrabold leading-none tracking-tight  md:text-3xl lg:text-4xl dark:text-white"
              >Date</h1></label>
              <input type="date" id="chooseDate" name="chooseDate" />
            </div>
            <button
            class="ml-2 mt-5 bg-gray-100 hover:bg-purple-200 text-purple-800 font-bold py-3 px-7 border-b-4 border-purple-400 hover:border-purple-700 rounded-full"
            id="addgoal"
            type="submit"
          >
            <div class="flex items-left">
              <span>Add Goal</span>
            </div>
          </button>
           </div>
        </div> 
        
        </form>
        <!-- <h1
          class="mb-4 text-2xl font-extrabold leading-none tracking-tight text-gray-900 md:text-3xl lg:text-4xl dark:text-white"
        >
        Have No Motivation In Life?
        Add Goal
        </h1> -->
        <!-- <script src="https://static-bundles.visme.co/forms/vismeforms-embed.js"></script> -->
      <div class="msg-box">
        
<a href="#" class="flex flex-col items-center bg-white border border-gray-200 rounded-lg shadow md:flex-row md:max-w-xl hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700">
  <!-- <img class="object-cover w-full rounded-t-lg h-96 md:h-a md:w-48 md:rounded-none md:rounded-s-lg" src="/images/th-_1_.jpg" alt=""> -->
  <div class="flex flex-col justify-between p-4 leading-normal bg-purple-200">
      <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white"> Money-Saving Tips!!</h5>
      <p class="mb-3 font-normal text-gray-700 dark:text-gray-400">  Here are some tips to save money and improve budget planning:</p>
      <div id="messageBox" class="message-box"></div>
    </div>
</a>

      </div>
    </section>
    <section id="s6" class="viewg-section" style="padding-top: 80px">
      <div class="view ml-3">
        <h1
          class="mb-4 text-2xl font-extrabold leading-none tracking-tight text-gray-900 md:text-3xl lg:text-4xl dark:text-white"
        >
          View Goal
        </h1>

        <div class="parent-container">
          <div class="goal-info">
            <% goals.forEach((goal, index) => { %>
            <div class="goal-item">
              <h3>Goal <%= index + 1 %>: <%= goal.goalName %></h3>
              <p>Amount: $<%= goal.goalAmount %></p>
              <p>Target Date: <%= goal.chooseDate %></p>
            </div>
            <% }); %>
          </div>
          <h1
            class="mb-4 text-2xl font-extrabold leading-none tracking-tight text-gray-900 md:text-3xl lg:text-4xl dark:text-white"
          >
            <div class="flashcard-container">
              <div class="flashcard savings" data-value="<%= savings %>">
              <center>  <h2>Savings</h2></center>
                <center><p class="value">$<%= savings %></p></center>
              </div>
              <div class="flashcard expenses" data-value="<%= totalExpenses %>">
                <center><h2>Expenses</h2></center>
              <center>  <p class="value">$<%= totalExpenses %></p></center>
              </div>
              <div
                class="flashcard investment"
                data-value="<%= totalInvestments %>"
              >
               <center><h2>Investment</h2></center> 
            <center>    <p class="value">$<%= totalInvestments %></p></center>
              </div>
            </div>
          </h1>
        </div>
      </div>
    </section>

    <!-- <section class="view-section" id="s3" style="padding-top: 80px">
        <div class="view ml-3">
          <h1
            class="mb-4 text-2xl font-extrabold leading-none tracking-tight text-gray-900 md:text-3xl lg:text-4xl dark:text-white"
          >
            Transaction History
          </h1>
        </div>
      </section> -->
    <section class="view-section" id="s3" style="padding-top: 80px">
      <div class="view ml-3">
        <h1
          class="mb-4 text-2xl font-extrabold leading-none tracking-tight text-gray-900 md:text-3xl lg:text-4xl dark:text-white"
        >
          Transaction History
        </h1>
        <div class="table-container">
          <table id="transactionTable" class="responsive-table">
            <thead>
              <tr>
                <th>Date</th>
                <th>Credit/Debit</th>
                <th>Type</th>
                <th>Amount</th>
              </tr>
            </thead>
            <tbody>
              <!-- Table rows will be dynamically added here -->
            </tbody>
          </table>
        </div>
      </div>
    </section>
    <section id="s4" class="about-section" style="padding-top: 80px">
      <div class="about ml-3 py-4" >
    <div class="header">
      <h1 class="mb-4 text-5xl font-extrabold leading-none tracking-tight text-gray-300 md:text-5xl lg:text-5xl dark:text-white">
        Meet the creators
    </h1>
    <h1 class="mb-4 text-5xl font-extrabold leading-none tracking-tight text-gray-300 md:text-5xl lg:text-5xl dark:text-white">
        of <span style="font-weight: normal; font-style: italic; color: #a181e3 ; font-family:Cambria, Cochin, Georgia, Times, 'Times New Roman', serif ;">Expensify</span>
    </h1>
    
    
    </div>

    <div class="content">
        <div class="person">
          
            <img src="/images/i1.jpg">
            <img src="/images/i2.jpg">
        </div>
        <div class="info">
          <h1 class="mb-4 text-5xl font-extrabold leading-none tracking-tight text-gray-500 md:text-5xl lg:text-5xl dark:text-white">
            Khushi & Mahek</h1>
            <p>
                Khushi Makwana and Mahek Mehta are two dedicated students pursuing Bachelor's degrees in Computer Science and Technology at Nirma University. Currently in their second year of studies, they have demonstrated a keen interest and passion for technology and innovation. Along with their academic pursuits, Khushi and Mahek have embarked on an exciting journey to develop a web application aimed at simplifying personal finance management. Their project focuses on creating an intuitive and user-friendly expense tracker web application. 
            </p>
            <p>
                Recognizing the increasing need for effective financial management tools in today's fast-paced world, they are committed to developing a solution that will empower individuals to better manage their finances, track expenses, and achieve their financial goals. With their combined knowledge, skills, and enthusiasm, Khushi and Mahek are dedicated to bringing this project to fruition and making a positive impact in the field of financial technology.
            </p>
        </div>
    </div>

    <div class="about-site">
      <h1 class="mb-4 text-4xl font-extrabold leading-none tracking-tight text-gray-500 md:text-4xl lg:text-4xl dark:text-white">
        About Our Website</h2>
        <p>
            Expensify is a user-friendly web application designed to simplify the process of tracking expenses and maintaining a comprehensive record of your finances. Whether you're an individual looking to manage personal expenses or a business aiming to streamline financial operations, Expensify offers a convenient and efficient solution. One of the standout features of Expensify is its "Set a Goal" functionality, which enables users to set specific savings targets for various financial goals. Whether you're saving for a dream vacation, a new car, or a down payment on a home, this feature allows you to track your progress and stay motivated as you work towards achieving your objectives.
            With its intuitive interface and easy-to-use tools, Expensify makes it simple to categorize expenses, generate detailed reports, and gain valuable insights into your spending habits. By providing real-time updates and personalized recommendations, the application helps you make informed financial decisions and take control of your financial future. In addition to its robust features and functionalities, Expensify prioritizes user experience, ensuring that the application is accessible and straightforward for users of all skill levels. Whether you're a financial novice or an experienced budgeter, Expensify offers the tools and support you need to manage your finances with confidence and ease.
        </p>
    </div>

    <div class="footer">
        <h2>Contact Us</h2>
        <p>Email:</p>
        <p>22bce167@nirmauni.ac.in</p>
        <p>22bce171@nirmauni.ac.in</p>
        <p>Phone: +1234567890</p>
    </div>

      </div>
    </section>
    
    <script>


                  // Add this function to fetch and display goals
                  async function fetchAndDisplayGoals() {
                      try {
                          const response = await fetch("/goals"); 
                          const goals = await response.json(); 

                          const goalInfo = document.querySelector(".goal-info"); 

                          // Clear existing content
                          goalInfo.innerHTML = "";

                          // Iterate over each goal and append to goal info
                          goals.forEach(goal => {
                              const goalElement = document.createElement("div");
                              goalElement.classList.add("goal-item");
                              goalElement.innerHTML = `
                                  <h3>${goal.goalName}</h3>
                                  <p>Amount: $${goal.goalAmount}</p>
                                  <p>Target Date: ${goal.chooseDate}</p>
                              `;
                              goalInfo.appendChild(goalElement);
                          });
                      } catch (error) {
                          console.error("Error fetching and displaying goals:", error);
                      }
                  }

                  // Call fetchAndDisplayGoals when the page loads
                  window.addEventListener("DOMContentLoaded", fetchAndDisplayGoals);


function saveGoal() {
  // Get input values
  var goalName = document.getElementById("goalName").value.trim();
  var goalAmount = document.getElementById("goalAmount").value.trim();
  var chooseDate = document.getElementById("chooseDate").value.trim();

  // Validate input fields
  if (!goalName) {
    alert("Please enter a goal name.");
    return false; // Prevent form submission
  }

  if (!goalAmount || isNaN(goalAmount) || parseFloat(goalAmount) <= 0) {
    alert("Please enter a valid amount.");
    return false; // Prevent form submission
  }

  if (!chooseDate) {
    alert("Please select a date.");
    return false; // Prevent form submission
  }

  // If all validations pass, you can proceed with form submission
  var goaldata = {
    goalName: goalName,
    goalAmount: goalAmount,
    chooseDate: chooseDate
   };

                         
                                          // document.getElementById("goalName").disabled = true;
                                          // document.getElementById("goalAmount").disabled = true;
                                          // document.getElementById("chooseDate").disabled = true;
                                          // document.getElementById("addgoal").disabled = true;

}
                                                                    var totalExpenses = <%= totalExpenses %>; 
                                                                      var totalSalary = <%= totalSalary %>;
                                                                      var totalInvestments = <%= totalInvestments %>;
                                                              var savings=<%= savings %>;
                                                                 
                                                                    async function fetchAndPopulateTransactionHistory() {
                                                                      try {
                                                                        const response = await fetch("/transactions"); 
                                                                        const transactions = await response.json(); 

                                                                        const tableBody = document.querySelector("#transactionTable tbody");
                                                                        tableBody.innerHTML = ""; // Clear existing table rows

                                                                        transactions.forEach((transaction) => {
                                                                          const row = document.createElement("tr"); 
                                                                          row.innerHTML = `
                                                                          <td>${new Date(transaction.date).toLocaleDateString()}</td>
                                                                          <td>${transaction.creditDebit}</td>
                                                                          <td>${transaction.type}</td>
                                                                          <td>${transaction.amount}</td>
                                                                        `;
                                                                          tableBody.appendChild(row); // Append row to table
                                                                        });
                                                                      } catch (error) {
                                                                        console.error("Error fetching transaction data:", error);
                                                                      }
                                                                    }

                                                                    // Call the function to fetch and populate transaction history when the page loads
                                                                    window.addEventListener(
                                                                      "DOMContentLoaded",
                                                                      fetchAndPopulateTransactionHistory
                                                                    );
                                                function saveTransaction() {
                                              // Get input values
                                              var amount = document.getElementById("amount").value.trim();
                                              var date = document.getElementById("date").value.trim();
                                              var type = document.getElementById("type").value.trim();
                                              var description = document.getElementById("description").value.trim();
                                              var creditDebit;

                                              // Determine credit/debit based on type
                                              if (type === "Salary") {
                                                  creditDebit = "credit";
                                              } else {
                                                  creditDebit = "debit";
                                              }

                                              // Validate input fields
                                              if (!amount || isNaN(amount) || parseFloat(amount) <= 0) {
                                                  alert("Please enter a valid amount.");
                                                  return false;
                                              }

                                              if (!date) {
                                                  alert("Please select a date.");
                                                  return false;
                                              }

                                              if (!type) {
                                                  alert("Please select a transaction type.");
                                                  return false;
                                              }

                                              if (!description) {
                                                  alert("Please enter a description.");
                                                  return false;
                                              }

                                              // Check if the entered expense or investment exceeds the remaining balance (totalSalary - totalExpenses - totalInvestments)
                                              var remainingBalance = parseFloat(totalSalary) - parseFloat(totalExpenses) - parseFloat(totalInvestments);
                                              if (type === "expense" && parseFloat(amount) > remainingBalance) {
                                                  alert("Expense amount exceeds remaining balance.");
                                                  return false;
                                              }

                                              if (type === "investment" && parseFloat(amount) > remainingBalance) {
                                                  alert("Investment amount exceeds remaining balance.");
                                                  return false;
                                              }

                                              // Prepare transaction data
                                              var transactionData = {
                                                  amount: amount,
                                                  date: date,
                                                  type: type,
                                                  description: description,
                                                  creditDebit: creditDebit
                                              };

             
                                              return true; 
                                          }



                                                                    const messages = [
                                                                      "Remember, every penny saved is a penny earned!",
                                                                      "Setting a goal is the first step to turning the invisible into the visible.",
                                                                      "Saving money is a good habit. Keep it up!",
                                                                      "Financial goals can lead to financial freedom.",
                                                                      "A little progress each day adds up to big results.",
                                                                    ];

                                                                    function displayMessage() {
                                                                      const messageBox = document.getElementById("messageBox");
                                                                      const randomIndex = Math.floor(Math.random() * messages.length);
                                                                      messageBox.textContent = messages[randomIndex];
                                                                    }

                                                                    displayMessage();

                                                                    setInterval(displayMessage, 3000);
                                                                    function clearPopupFields() {
                                                                      document.getElementById("amount").value = "";
                                                                      document.getElementById("date").value = "";
                                                                      document.getElementById("type").value = "";
                                                                      document.getElementById("description").value = "";
                                                                      document.getElementById("creditDebit").value = "credit"; // Default to "Credit"
                                                                    }
                                                                    function toggleTypeOptions() {
                                                                      var creditDebitSelect = document.getElementById("creditDebit");
                                                                      var typeSelect = document.getElementById("type");

                                                                      // Remove all options from the type select
                                                                      typeSelect.innerHTML = "";

                                                                      // Add the default option
                                                                      var defaultOption = document.createElement("option");
                                                                      defaultOption.value = "";
                                                                      defaultOption.text = "Select type";
                                                                      typeSelect.appendChild(defaultOption);

                                                                      // Add options based on the selected credit/debit
                                                                      if (creditDebitSelect.value === "credit") {
                                                                        var salaryOption = document.createElement("option");
                                                                        salaryOption.value = "salary";
                                                                        salaryOption.text = "Salary";
                                                                        typeSelect.appendChild(salaryOption);
                                                                      } else if (creditDebitSelect.value === "debit") {
                                                                        var expenseOption = document.createElement("option");
                                                                        expenseOption.value = "expense";
                                                                        expenseOption.text = "Expense";
                                                                        typeSelect.appendChild(expenseOption);

                                                                        var investmentOption = document.createElement("option");
                                                                        investmentOption.value = "investment";
                                                                        investmentOption.text = "Investment";
                                                                        typeSelect.appendChild(investmentOption);
                                                                      }
                                                                    }

                                                                    function showPopup() {
                                                                      clearPopupFields();
                                                                      document.getElementById("popup").style.display = "block";
                                                                      document.querySelector(".overlay").style.display = "block";
                                                                    }

                                                                    // Function to close the pop-up and overlay
                                                                    function closePopup() {
                                                                      document.getElementById("popup").style.display = "none";
                                                                      document.querySelector(".overlay").style.display = "none";
                                                                    }

                                                                    // Add event listener to the icon
                                                                    document.getElementById("addIcon").addEventListener("click", showPopup);
                                                                    let arrow = document.querySelectorAll(".arrow");
                                                                    for (var i = 0; i < arrow.length; i++) {
                                                                      arrow[i].addEventListener("click", (e) => {
                                                                        let arrowParent = e.target.parentElement.parentElement; 
                                                                        arrowParent.classList.toggle("showMenu");
                                                                      });
                                                                    }

                                                                    let sidebar = document.querySelector(".sidebar");
                                                                    let sidebarBtn = document.querySelector(".bxs-wallet");
                                                                    console.log(sidebarBtn);
                                                                    sidebarBtn.addEventListener("click", () => {
                                                                      sidebar.classList.toggle("close");
                                                                    });

                                                                    var data = {
                                                                      labels: ["Expense", "Salary", "Investments"],
                                                                      datasets: [
                                                                        {
                                                                          data: [totalExpenses, totalSalary, totalInvestments],
                                                                          backgroundColor: [
                                                                            "rgb(142, 122, 181)", 
                                                                            "rgb(183, 132, 183)", 
                                                                            "rgb(228, 147, 179)", 
                                                                          ],
                                                                          hoverOffset: 4, 
                                                                        },
                                                                      ],
                                                                    };

                                                                    // Configuration options for the chart
                                                                    var config = {
                                                                      type: "doughnut",
                                                                      data: data,
                                                                      options: {
                                                                        responsive: true,
                                                                        maintainAspectRatio: false,
                                                                        plugins: {
                                                                          legend: {
                                                                            position: "bottom",
                                                                          },
                                                                        },
                                                                      },
                                                                    };

                                                                    // Create the chart
                                                          var myChart = new Chart(document.getElementById("donutChart"), config);
    
                                                          $(document).ready(function() {
        // Add event listener to logout icon
        $('#logoutIcon').click(function() {
            $.ajax({
                type: 'GET',
                url: '/logout',
                success: function(response) {
                    window.location.href = '/home';
                },
                error: function(xhr, status, error) {
                    console.error(error);
                }
            });
        });
    });
    </script>
  </body>
</html>
